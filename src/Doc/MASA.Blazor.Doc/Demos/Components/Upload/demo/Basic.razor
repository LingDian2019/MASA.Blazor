@using System.IO;

<MSwitch @bind-Value="chips" Label="Use chips"></MSwitch>

<MUpload Files="@files" OnUpload="HandleUpload" Multiple ShowSize Counter Chips="chips" Accept="image/*" @ref="_uploadElementReference">
    <ActivatorContent>
        <MButton Color="primary">Upload</MButton>
    </ActivatorContent>
</MUpload>

@code {
    protected MUpload _uploadElementReference;

    bool chips = false;

    List<UploadFile> files = new List<UploadFile>()
    {
    new UploadFile { FileName ="defaultFileName1", Url = "https://picsum.photos/510/300?random", Uploaded = true, IsImage = true },
    new UploadFile { FileName = "defaultFileNam2", Url = "https://picsum.photos/520/300?random", Uploaded = true, IsImage = true }
    };

    [Inject]
    public IJSRuntime JsRuntime { get; set; }

    async Task HandleUpload(List<UploadFile> uploadFiles)
    {
        var result = await JsRuntime.InvokeAsync<List<UploadFile>>("testUploadFile", _uploadElementReference.Element);
        for (int i = 0; i < result.Count; i++)
        {
            var item = result[i];
            uploadFiles[i].Uploaded = item.Uploaded;
            uploadFiles[i].Url = item.Url;
            uploadFiles[i].Error = item.Error;
        }

        files.AddRange(uploadFiles);
    }

    // javascript:
    //
    // window.testUploadFile = function(element) {
    //     let result = []
    //
    //     if(element){
    //         for(let i = 0; i< element.files.length; i++){
    //             var file = element.files[i]
    //
    //             // TODO: oss here
    //
    //             let fileInfo = {
    //                 fileName: file.name,
    //                 uploaded: true,
    //                 error: null,
    //                 url: "",
    //                 value: null
    //             }
    //
    //             result.push(fileInfo)
    //         }
    //     }
    //
    //     return result;
    // }
}